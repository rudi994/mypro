npx create-react-app todo-list-app
cd todo-list-app
npm start



App.js
import React, { useState } from 'react';
import './App.css';

function App() {
  const [task, setTask] = useState('');
  const [taskList, setTaskList] = useState([]);

  const handleInputChange = (e) => {
    setTask(e.target.value);
  };

  const addTask = () => {
    if (task !== '') {
      const newTask = {
        id: Math.random(),
        value: task,
        isCompleted: false,
      };
      setTaskList([...taskList, newTask]);
      setTask('');
    }
  };

  const deleteTask = (id) => {
    setTaskList(taskList.filter(task => task.id !== id));
  };

  const toggleComplete = (id) => {
    const updatedTaskList = taskList.map(task => {
      if (task.id === id) {
        return { ...task, isCompleted: !task.isCompleted };
      }
      return task;
    });
    setTaskList(updatedTaskList);
  };

  return (
    <div className="app">
      <h1>To-Do List</h1>

      <div className="input-container">
        <input
          type="text"
          value={task}
          onChange={handleInputChange}
          placeholder="Enter a task"
        />
        <button onClick={addTask}>Add Task</button>
      </div>

      <ul className="task-list">
        {taskList.map(task => (
          <li key={task.id} className={task.isCompleted ? 'completed' : ''}>
            <span onClick={() => toggleComplete(task.id)}>{task.value}</span>
            <button onClick={() => deleteTask(task.id)}>Delete</button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;


app.css
body {
  font-family: Arial, sans-serif;
  background-color: #f4f4f4;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  margin: 0;
}

.app {
  background-color: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
}

h1 {
  text-align: center;
  color: #333;
}

.input-container {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}

input[type="text"] {
  padding: 10px;
  width: 200px;
  border-radius: 5px;
  border: 1px solid #ccc;
}

button {
  padding: 10px;
  margin-left: 10px;
  border: none;
  background-color: #28a745;
  color: white;
  border-radius: 5px;
  cursor: pointer;
}

button:hover {
  background-color: #218838;
}

.task-list {
  list-style-type: none;
  padding: 0;
}

.task-list li {
  padding: 10px;
  margin: 5px 0;
  display: flex;
  justify-content: space-between;
  background-color: #f9f9f9;
  border-radius: 5px;
}

.task-list li.completed span {
  text-decoration: line-through;
  color: gray;
}

.task-list li button {
  background-color: #dc3545;
  color: white;
  border: none;
  padding: 5px 10px;
  border-radius: 5px;
  cursor: pointer;
}

.task-list li button:hover {
  background-color: #c82333;
}

span {
  cursor: pointer;
}
