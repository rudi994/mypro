Counter using Hooks:
import React, { useState } from 'react';

function CounterHooks() {
  const [count, setCount] = useState(0);

  const increment = () => {
    setCount(count + 1);
  };

  const decrement = () => {
    setCount(count - 1);
  };

  return (
    <div style={styles.container}>
      <h1>Counter using Hooks</h1>
      <p>Count: {count}</p>
      <button onClick={increment} style={styles.button}>Increment</button>
      <button onClick={decrement} style={styles.button}>Decrement</button>
    </div>
  );
}

const styles = {
  container: {
    textAlign: 'center',
    padding: '20px',
  },
  button: {
    margin: '10px',
    padding: '10px 20px',
    fontSize: '16px',
  },
};

export default CounterHooks;


Code for Counter using Class Component:
import React, { Component } from 'react';

class CounterClass extends Component {
  constructor(props) {
    super(props);
    this.state = {
      count: 0,
    };
  }

  increment = () => {
    this.setState({ count: this.state.count + 1 });
  };

  decrement = () => {
    this.setState({ count: this.state.count - 1 });
  };

  render() {
    return (
      <div style={styles.container}>
        <h1>Counter using Class</h1>
        <p>Count: {this.state.count}</p>
        <button onClick={this.increment} style={styles.button}>Increment</button>
        <button onClick={this.decrement} style={styles.button}>Decrement</button>
      </div>
    );
  }
}

const styles = {
  container: {
    textAlign: 'center',
    padding: '20px',
  },
  button: {
    margin: '10px',
    padding: '10px 20px',
    fontSize: '16px',
  },
};

export default CounterClass;



APP.JS
import React from 'react';
import CounterHooks from './CounterHooks';
import CounterClass from './CounterClass';

function App() {
  return (
    <div>
      <CounterHooks />
      <CounterClass />
    </div>
  );
}

export default App;
