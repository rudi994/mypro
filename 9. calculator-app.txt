npx create-react-app calculator-app
cd calculator-app
npm start


APP.JS
import React, { useState } from 'react';
import './App.css';

function App() {
  const [input, setInput] = useState('');

  const handleClick = (value) => {
    setInput(input + value);
  };

  const handleClear = () => {
    setInput('');
  };

  const handleEqual = () => {
    try {
      setInput(eval(input).toString());  // Be cautious with `eval` in production apps
    } catch (error) {
      setInput('Error');
    }
  };

  return (
    <div className="calculator">
      <div className="calculator-display">{input || '0'}</div>
      <div className="calculator-buttons">
        <button onClick={handleClear} className="button clear">C</button>
        <button onClick={() => handleClick('/')} className="button operator">/</button>
        <button onClick={() => handleClick('*')} className="button operator">*</button>
        <button onClick={() => handleClick('-')} className="button operator">-</button>
        <button onClick={() => handleClick('7')} className="button">7</button>
        <button onClick={() => handleClick('8')} className="button">8</button>
        <button onClick={() => handleClick('9')} className="button">9</button>
        <button onClick={() => handleClick('+')} className="button operator">+</button>
        <button onClick={() => handleClick('4')} className="button">4</button>
        <button onClick={() => handleClick('5')} className="button">5</button>
        <button onClick={() => handleClick('6')} className="button">6</button>
        <button onClick={handleEqual} className="button equal">=</button>
        <button onClick={() => handleClick('1')} className="button">1</button>
        <button onClick={() => handleClick('2')} className="button">2</button>
        <button onClick={() => handleClick('3')} className="button">3</button>
        <button onClick={() => handleClick('0')} className="button">0</button>
        <button onClick={() => handleClick('.')} className="button">.</button>
      </div>
    </div>
  );
}

export default App;


APP.CSS
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #f4f4f4;
  font-family: 'Arial', sans-serif;
}

.calculator {
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.1);
  width: 300px;
  padding: 20px;
}

.calculator-display {
  background-color: #333;
  color: #fff;
  font-size: 2.5em;
  text-align: right;
  padding: 15px;
  border-radius: 5px;
  margin-bottom: 20px;
}

.calculator-buttons {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 10px;
}

.button {
  background-color: #e0e0e0;
  border: none;
  padding: 20px;
  font-size: 1.5em;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.button:hover {
  background-color: #d4d4d4;
}

.operator {
  background-color: #ff9500;
  color: white;
}

.operator:hover {
  background-color: #e08c00;
}

.clear {
  background-color: #f44336;
  color: white;
}

.clear:hover {
  background-color: #d32f2f;
}

.equal {
  background-color: #4caf50;
  color: white;
  grid-column: span 2;
}

.equal:hover {
  background-color: #388e3c;
}



